name: Prepare D2X Docker

on:
    workflow_call:
        inputs:
            docker_image:
                description: "Docker image to use"
                required: false
                type: string
                default: "ghcr.io/muselab-d2x/d2x"
            docker_tag:
                description: "Docker image tag to use (defaults to main)"
                required: false
                type: string
                default: "main"
            use_browser:
                description: "Use browser image"
                required: false
                type: boolean
                default: false
            debug:
                description: "Enable debug mode"
                required: false
                type: boolean
                default: false
        outputs:
            docker_image:
                description: "Docker image name"
                value: ${{ jobs.prepare.outputs.docker_image }}
            full_docker_tag:
                description: "Full Docker tag including suffix"
                value: ${{ jobs.prepare.outputs.full_docker_tag }}
            full_image_name:
                description: "Full Docker image name including tag"
                value: ${{ jobs.prepare.outputs.full_image_name }}

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            docker_image: ${{ steps.set_vars.outputs.docker_image }}
            full_docker_tag: ${{ steps.set_vars.outputs.full_docker_tag }}
            full_image_name: ${{ steps.set_vars.outputs.full_image_name }}
        steps:
            - name: Set variables
              id: set_vars
              run: |
                  DOCKER_IMAGE="${{ inputs.docker_image }}"
                  DOCKER_TAG="${{ inputs.docker_tag }}"
                  TAG_SUFFIX=""
                  if [ "${{ inputs.use_browser }}" == "true" ]; then
                    TAG_SUFFIX="-browser"
                  fi
                  FULL_DOCKER_TAG="${DOCKER_TAG}${TAG_SUFFIX}"
                  FULL_IMAGE_NAME="${DOCKER_IMAGE}:${FULL_DOCKER_TAG}"

                  echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
                  echo "full_docker_tag=${FULL_DOCKER_TAG}" >> $GITHUB_OUTPUT
                  echo "full_image_name=${FULL_IMAGE_NAME}" >> $GITHUB_OUTPUT

                  # Create a JSON file with the data
                  echo '{
                    "docker_image": "'${DOCKER_IMAGE}'",
                    "full_docker_tag": "'${FULL_DOCKER_TAG}'",
                    "full_image_name": "'${FULL_IMAGE_NAME}'",
                    "workflow_run_id": "'${{ github.run_id }}'",
                    "workflow_run_number": "'${{ github.run_number }}'",
                    "workflow_run_attempt": "'${{ github.run_attempt }}'",
                    "github_sha": "'${{ github.sha }}'"
                  }' > docker_prep_info.json

                    - name: Cache Docker images
                      id: cache-docker
                      uses: actions/cache@v3
                      with:
                          path: /tmp/.docker-cache
                          key: ${{ runner.os }}-docker-${{ steps.set_vars.outputs.full_image_name }}
                          restore-keys: |
                              ${{ runner.os }}-docker-${{ steps.set_vars.outputs.docker_image }}-

                    - name: Load cached Docker images
                      id: load-cache
                      run: |
                          if [ -f /tmp/.docker-cache/images.tar ]; then
                            docker load < /tmp/.docker-cache/images.tar
                            echo "cache_hit=true" >> $GITHUB_OUTPUT
                          else
                            echo "cache_hit=false" >> $GITHUB_OUTPUT
                          fi

                    - name: Pull Docker image
                      id: pull-image
                      run: |
                          echo "Pulling Docker image: ${{ steps.set_vars.outputs.full_image_name }}"
                          docker pull ${{ steps.set_vars.outputs.full_image_name }}
                          docker save ${{ steps.set_vars.outputs.full_image_name }} > /tmp/.docker-cache/images.tar

                    - name: Generate Job Summary
                      run: |
                          echo "# D2X Docker Preparation Summary" >> $GITHUB_STEP_SUMMARY
                          echo "## Docker Image Details" >> $GITHUB_STEP_SUMMARY
                          echo "- **Repository:** ${{ steps.set_vars.outputs.repo_full_name }}" >> $GITHUB_STEP_SUMMARY
                          echo "- **Docker Image:** ${{ steps.set_vars.outputs.docker_image }}" >> $GITHUB_STEP_SUMMARY
                          echo "- **Docker Tag:** ${{ steps.set_vars.outputs.full_docker_tag }}" >> $GITHUB_STEP_SUMMARY
                          echo "- **Full Image Name:** ${{ steps.set_vars.outputs.full_image_name }}" >> $GITHUB_STEP_SUMMARY
                          echo "" >> $GITHUB_STEP_SUMMARY
                          echo "## Cache Information" >> $GITHUB_STEP_SUMMARY
                          echo "- **Cache Hit:** ${{ steps.load-cache.outputs.cache_hit }}" >> $GITHUB_STEP_SUMMARY
                          echo "" >> $GITHUB_STEP_SUMMARY
                          echo "## Workflow Information" >> $GITHUB_STEP_SUMMARY
                          echo "- **Workflow Run ID:** ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
                          echo "- **Workflow Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
                          echo "- **Workflow Run Attempt:** ${{ github.run_attempt }}" >> $GITHUB_STEP_SUMMARY
                          echo "- **GitHub SHA:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

                          if [ "${{ inputs.debug }}" == "true" ]; then
                            echo "" >> $GITHUB_STEP_SUMMARY
                            echo "## Debug Information" >> $GITHUB_STEP_SUMMARY
                            echo "Debug mode is enabled. Additional information:" >> $GITHUB_STEP_SUMMARY
                            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
                            cat docker_prep_info.json >> $GITHUB_STEP_SUMMARY
                            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
                          fi

                    - name: Upload Docker Prep Info Artifact
                      uses: actions/upload-artifact@v3
                      with:
                          name: docker-prep-info
                          path: docker_prep_info.json
                          retention-days: 5

                    - name: D2X Image Details
                      run: |
                          echo "Debug mode enabled"
                          echo "REPO_FULL_NAME: ${{ steps.set_vars.outputs.repo_full_name }}"
                          echo "DOCKER_IMAGE: ${{ steps.set_vars.outputs.docker_image }}"
                          echo "FULL_DOCKER_TAG: ${{ steps.set_vars.outputs.full_docker_tag }}"
                          echo "FULL_IMAGE_NAME: ${{ steps.set_vars.outputs.full_image_name }}"
