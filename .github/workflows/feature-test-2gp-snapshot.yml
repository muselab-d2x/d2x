name: 2GP Feature Test and PR Snapshot
on:
    workflow_call:
        inputs:
            debug:
                required: false
                default: false
                type: boolean
            create_snapshot:
                required: false
                default: false
                type: boolean
            environment_prefix:
                required: false
                description: "If set, a GitHub Environment will be created for the snapshot with this prefix"
                type: string
            commit_status_context:
                required: false
                description: "The context to use for the commit status containing snapshot creation status and details"
                type: string
        secrets:
            dev-hub-auth-url:
                required: false
            dev-hub-username:
                required: false
            dev-hub-client-id:
                required: false
            dev-hub-private-key:
                required: false
            gh-email:
                required: true
            github-token:
                required: true
            github-app-id:
                required: false
            github-app-key:
                required: false

jobs:
    feature-test-and-snapshot:
        name: "2GP Feature Test and PR Snapshot"
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/muselab-d2x/d2x:cumulusci-next
            options: --user root
            credentials:
                username: "${{ github.actor }}"
                password: "${{ secrets.github-token }}"
            env:
                DEV_HUB_AUTH_URL: "${{ secrets.dev-hub-auth-url }}"
                DEV_HUB_USERNAME: "${{ secrets.dev-hub-username }}"
                DEV_HUB_CLIENT_ID: "${{ secrets.dev-hub-client-id }}"
                DEV_HUB_PRIVATE_KEY: "${{ secrets.dev-hub-private-key }}"
                CUMULUSCI_SERVICE_github: '{ "username": "${{ github.actor }}", "token": "${{ secrets.github-token }}", "email": "${{ secrets.gh-email }}" }'
                GITHUB_APP_ID: "${{ secrets.github-app-id }}"
                GITHUB_APP_KEY: "${{ secrets.github-app-key }}"
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Auth to DevHub
              run: /usr/local/bin/devhub.sh

            - name: Set feature org as default org
              run: |
                  cci org default feature
                  cci org info feature

            - name: Build Feature Test Package
              run: cci flow run build_feature_test_package $([[ "${{ inputs.debug }}" == "true" ]] && echo " --debug") | tee cumulusci-flow.log
              shell: bash

            - name: Set Commit Status
              env:
                  GITHUB_TOKEN: "${{ secrets.github-token }}"
              run: |
                  VERSION=$(cat cumulusci-flow.log | grep -o -E -m 1 "04t[a-zA-Z0-9]{15}")
                  gh api \
                    --method POST \
                    -H "Accept: application/vnd.github.v3+json" \
                    '/repos/${{ github.repository }}/statuses/${{ github.sha }}' \
                    -f state='success' \
                    -f description="version_id: $VERSION" \
                    -f context='Build Feature Test Package'
              shell: bash

            # - name: Prepare Feature Test Org
            #   id: prepare_org
            #   run: |
            #       cci flow run ci_feature_2gp_pre_snapshot
            #   continue-on-error: true

            - name: Start Snapshot Creation
              if: inputs.create_snapshot == true
              id: start_snapshot_creation
              run: |
                  cci task run github_pull_request_snapshot \
                  --wait False \
                  --build-success ${{ job.status == 'success' }} \
                  --snapshot-is-packaged true
                  if [ -f "$GITHUB_OUTPUT" ]; then
                    SNAPSHOT_ID=$(grep SNAPSHOT_ID $GITHUB_OUTPUT | cut -d '=' -f 2)
                    if [ -n "$SNAPSHOT_ID" ]; then
                        echo "SNAPSHOT_ID=$SNAPSHOT_ID" >> $GITHUB_ENV
                        echo "snapshot_id=$SNAPSHOT_ID" >> $GITHUB_OUTPUT
                    else
                        echo "No snapshot ID found. Skipping snapshot finalization."
                    fi
                  else
                    echo "No GITHUB_OUTPUT file found. Skipping snapshot finalization."
                  fi
              shell: bash
              continue-on-error: true

            - name: Run Feature Test
              run: |
                  cci flow run ci_feature_2gp_post_snapshot
                  continue-on-error: true

            - name: Finalize Snapshot Creation
              if: env.SNAPSHOT_ID
              run: |
                  cci task run github_pull_request_snapshot \
                      --snapshot-id "${{ env.SNAPSHOT_ID }}" \
                      --build-success "${{ job.status == 'success' }}" \
                      --build-fail-tests "${{ contains(steps.feature_test.outputs.*, 'ApexTestException') }}" \
                      --snapshot-is-packaged true \
                      $([[ -n "${{ inputs.environment_prefix }}" ]] && echo "--github-environment-prefix '${{ inputs.environment_prefix }}'") \
                      $([[ -n "${{ inputs.commit_status_context }}" ]] && echo "--commit-status-context '${{ inputs.commit_status_context }}'")
              shell: bash

            - name: Delete Scratch Org
              if: ${{ always() }}
              run: cci org scratch_delete feature
              shell: bash
