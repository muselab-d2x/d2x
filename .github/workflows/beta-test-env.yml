name: Beta Test

on:
    workflow_call:
        inputs:
            env-name:
                required: true
                default: 1GP Packaging Beta
                type: string
            run-test:
                description: If true, run the ci_beta flow to test the beta as part of the job. Set to false to split ci_beta into a separate workflow
                default: true
                type: boolean
            debug:
                required: false
                default: false
                type: boolean
        secrets:
            packaging-org-auth-url:
                required: true
            dev-hub-auth-url:
                required: true
            gh-email:
                required: true
            github-token:
                required: true
            github-app-id:
                required: false
            github-app-key:
                required: false

jobs:
    beta-test:
        name: "Beta Test"
        runs-on: ubuntu-latest
        environment: ${{ inputs.env-name }}
        container:
            image: ghcr.io/muselab-d2x/d2x:cumulusci-next
            options: --user root
            credentials:
                username: ${{ github.actor }}
                password: ${{ secrets.github-token }}
            env:
                DEV_HUB_AUTH_URL: "${{ secrets.dev-hub-auth-url }}"
                PACKAGING_ORG_AUTH_URL: "${{ secrets.packaging-org-auth-url }}"
                CUMULUSCI_SERVICE_github: '{ "username": "${{ github.actor }}", "token": "${{ secrets.github-token }}", "email": "${{ secrets.gh-email }}" }'
                GITHUB_APP_ID: "${{ secrets.github-app-id }}"
                GITHUB_APP_KEY: "${{ secrets.github-app-key }}"
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Auth to DevHub
              run: /usr/local/bin/devhub.sh
            - name: Deploy to Packaging Org
              id: deploy_to_packaging_org
              run: cci flow run ci_master --org packaging $([[ "${{ inputs.debug }}" == "true" ]] && echo " --debug")
            - name: Parse Metadata Deletions
              id: parse_metadata_deletions
              run: |
                python /usr/local/bin/parse_metadata_deletions.py "${{ steps.deploy_to_packaging_org.outputs.stdout }}"
              continue-on-error: false
            - name: Report Metadata Deletions
              if: steps.parse_metadata_deletions.outcome == 'success'
              run: |
                echo "## Metadata Deletions" >> $GITHUB_STEP_SUMMARY
                cat metadata_deletions.json >> $GITHUB_STEP_SUMMARY
              shell: bash
            - name: Create JSON Artifact
              if: steps.parse_metadata_deletions.outcome == 'success'
              uses: actions/upload-artifact@v2
              with:
                name: metadata_deletions
                path: metadata_deletions.json
            - name: Create GitHub Check
              if: steps.parse_metadata_deletions.outcome == 'success' && secrets.github-app-id && secrets.github-app-key
              run: |
                bash scripts/create_github_check.sh metadata_deletions.json
              shell: bash
            - name: Build Beta Package
              run: cci flow run release_beta --org packaging $([[ "${{ inputs.debug }}" == "true" ]] && echo " --debug")
              shell: bash
            - name: Run Beta Test
              if: ${{ inputs.run-test }}
              run: cci flow run ci_beta --org beta
            - name: Delete Scratch Org
              if: ${{ always() }} && ${{ inputs.run-test }}
              run: |
                  cci org scratch_delete beta
              shell: bash
